{
	"info": {
		"_postman_id": "10dcea2b-296c-4252-bdcb-e69b791c6bd3",
		"name": "Referral system with API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29305594"
	},
	"item": [
		{
			"name": "First user",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required field - message\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.message).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Message is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.message).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has correct Content-Type header\", function () {",
									"  pm.expect(pm.response.headers.get(\"Content-Type\")).to.equal(\"application/json\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/login/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"login",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/login/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"login",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 15:21:36 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "58"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-Clacks-Overhead",
									"value": "GNU Terry Pratchett"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Pass your phone number by 'phone_number' key\"\n}"
						}
					]
				},
				{
					"name": "Login - phone validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonObject = JSON.parse(responseBody);",
									"pm.environment.set(\"authorization_code\", jsonObject.code);",
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has required fields - message and code\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.message).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.code).to.exist.and.to.be.a('string');",
									"});",
									"",
									"",
									"pm.test(\"Message is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Code is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.code).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"phone_number\": 79991110000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/login/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"login",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone_number\": 79991110000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/login/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"login",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 15:23:01 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "88"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-Clacks-Overhead",
									"value": "GNU Terry Pratchett"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Pass code from SMS by 'authorization_code' key\",\n    \"authorization_code\": \"2290\"\n}"
						}
					]
				},
				{
					"name": "Login - authorization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has required fields\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.phone_number).to.exist.and.to.be.a('string');",
									"  pm.expect(responseData.invite_code).to.exist.and.to.be.a('string');",
									"  pm.expect(responseData.is_superuser).to.exist.and.to.be.a('boolean');",
									"  pm.expect(responseData.is_staff).to.exist.and.to.be.a('boolean');",
									"});",
									"",
									"",
									"pm.test(\"Phone number should be a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.phone_number).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Phone number should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"invite_code is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.invite_code).to.be.a('string').and.to.have.lengthOf.at.least(1, \"invite_code should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"is_superuser is a boolean value\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.is_superuser).to.be.a('boolean');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"authorization_code\": {{authorization_code}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/login/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"login",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"authorization_code\": 2290\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/login/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"login",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 15:24:38 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "91"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Set-Cookie",
									"value": "csrftoken=etVr2evezMHJBkiPUXvWSwvLJo5ZXcMrfxrcyPTv0J8G2fJplONNB5cuoBB2xwNY; expires=Tue, 03 Sep 2024 15:24:38 GMT; Max-Age=31449600; Path=/; SameSite=Lax"
								},
								{
									"key": "Set-Cookie",
									"value": "sessionid=ims2rak48ne1pe0obtkydr1kx9o3yt9g; expires=Tue, 19 Sep 2023 15:24:38 GMT; HttpOnly; Max-Age=1209600; Path=/; SameSite=Lax"
								},
								{
									"key": "X-Clacks-Overhead",
									"value": "GNU Terry Pratchett"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "{\n    \"phone_number\": \"79991110000\",\n    \"invite_code\": \"000003\",\n    \"is_superuser\": false,\n    \"is_staff\": false\n}"
						}
					]
				},
				{
					"name": "Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response is an array with at least one element\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('array').and.to.have.lengthOf.at.least(1);",
									"});",
									"",
									"",
									"pm.test(\"Phone number field is present in the response\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function (data) {",
									"        pm.expect(data.phone_number).to.exist;",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Phone number is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('array');",
									"  responseData.forEach(function(item) {",
									"    pm.expect(item.phone_number).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Phone number should not be empty\");",
									"  });",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/profile/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"profile",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/profile/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"profile",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 15:25:19 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "63"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-Clacks-Overhead",
									"value": "GNU Terry Pratchett"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"phone_number\": \"78976528908\"\n    },\n    {\n        \"phone_number\": \"77145059227\"\n    }\n]"
						}
					]
				},
				{
					"name": "Invite code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"invite_code field is present in the response\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.invite_code).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"invite_code is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.invite_code).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"invite_code is in a valid format\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.invite_code).to.exist.and.to.match(/^[\\w\\d]{8}$/);",
									"});",
									"",
									"",
									"pm.test(\"Response time is in an acceptable range\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/profile/invite-code/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"profile",
								"invite-code",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/profile/invite-code/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"profile",
										"invite-code",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 15:25:46 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "24"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-Clacks-Overhead",
									"value": "GNU Terry Pratchett"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "{\n    \"invite_code\": \"000003\"\n}"
						}
					]
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has required fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.message).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Message is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"",
									"  pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/logout/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"logout",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/logout/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"logout",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 15:27:14 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "32"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Set-Cookie",
									"value": "sessionid=\"\"; expires=Thu, 01 Jan 1970 00:00:00 GMT; Max-Age=0; Path=/; SameSite=Lax"
								},
								{
									"key": "X-Clacks-Overhead",
									"value": "GNU Terry Pratchett"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"You are logged out\"\n}"
						}
					]
				}
			],
			"description": "Authorization to the user account, conventionally called the \"first user\", receiving his referrals and receiving an invite code of the authorized user."
		},
		{
			"name": "Second user",
			"item": [
				{
					"name": "Login - phone validation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"phone_of_second_user\", Math.floor(Math.random() * (79_999_999_999 - 79_000_000_000 + 1) + 79_000_000_000));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonObject = JSON.parse(responseBody);",
									"pm.environment.set(\"authorization_code\", jsonObject.code);",
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has required fields - message and code\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.message).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.code).to.exist.and.to.be.a('string');",
									"});",
									"",
									"",
									"pm.test(\"Message is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Code is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.code).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"phone_number\": {{phone_of_second_user}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/login/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"login",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone_number\": 79764923834\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/login/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"login",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 16:25:09 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "88"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-Clacks-Overhead",
									"value": "GNU Terry Pratchett"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Pass code from SMS by 'authorization_code' key\",\n    \"authorization_code\": \"3480\"\n}"
						}
					]
				},
				{
					"name": "Login - registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var xsrfCookie = postman.getResponseCookie(\"csrftoken\");",
									"pm.environment.set(\"csrf_token\", xsrfCookie.value);",
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has required fields\", function () {",
									"  const responseData = pm.response.json();",
									"",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.phone_number).to.exist;",
									"  pm.expect(responseData.invite_code).to.exist;",
									"  pm.expect(responseData.is_superuser).to.exist;",
									"  pm.expect(responseData.is_staff).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"phone_number is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.phone_number).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"invite_code is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.invite_code).to.be.a('string').and.to.have.lengthOf.at.least(1, \"invite_code should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"is_superuser should be a boolean value\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.is_superuser).to.be.a('boolean');",
									"});",
									"",
									"pm.test(\"is_staff should be a boolean value\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.is_staff).to.be.a('boolean');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"authorization_code\": {{authorization_code}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/login/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"login",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"authorization_code\": 3480\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/login/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"login",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 16:26:41 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "91"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Set-Cookie",
									"value": "csrftoken=IcBh7F1IrDFeMyKIu1xGNLyHMGDQwvT952ffMVo6J0JmSXAMoOOrcpbfZLMArULw; expires=Tue, 03 Sep 2024 16:26:41 GMT; Max-Age=31449600; Path=/; SameSite=Lax"
								},
								{
									"key": "Set-Cookie",
									"value": "sessionid=nsdako1hgg91j7fkxwjrgxobylhn5qr3; expires=Tue, 19 Sep 2023 16:26:41 GMT; HttpOnly; Max-Age=1209600; Path=/; SameSite=Lax"
								},
								{
									"key": "X-Clacks-Overhead",
									"value": "GNU Terry Pratchett"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "{\n    \"phone_number\": \"79764923834\",\n    \"invite_code\": \"000009\",\n    \"is_superuser\": false,\n    \"is_staff\": false\n}"
						}
					]
				},
				{
					"name": "Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response body is an array\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"",
									"pm.test(\"Response array is empty\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('array').that.is.empty;",
									"});",
									"",
									"",
									"pm.test(\"Response does not have any error message or error code\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array').that.is.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/profile/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"profile",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/profile/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"profile",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 16:27:10 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "2"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-Clacks-Overhead",
									"value": "GNU Terry Pratchett"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "[]"
						}
					]
				},
				{
					"name": "Invite code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"  const responseData = pm.response.json();",
									"",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.invite_code).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"invite_code is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.invite_code).to.be.a('string').and.to.have.lengthOf.at.least(1, \"invite_code should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"invite_code is in a valid format\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.invite_code).to.exist.and.to.match(/^[A-Za-z0-9]{6}$/);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/profile/invite-code/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"profile",
								"invite-code",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/profile/invite-code/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"profile",
										"invite-code",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 16:27:39 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "24"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-Clacks-Overhead",
									"value": "GNU Terry Pratchett"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "{\n    \"invite_code\": \"000009\"\n}"
						}
					]
				},
				{
					"name": "Referrer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required field - message\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.message).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Message is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.message).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"",
									"pm.test(\"Response body is not null or empty\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.message).to.exist.and.to.not.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/profile/referrer/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"profile",
								"referrer",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/profile/referrer/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"profile",
										"referrer",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 16:28:06 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "67"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-Clacks-Overhead",
									"value": "GNU Terry Pratchett"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Pass your referrer invite code by 'referrer_code' key\"\n}"
						}
					]
				},
				{
					"name": "Set referrer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required field - referrer_code\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.have.property('referrer_code');",
									"});",
									"",
									"",
									"pm.test(\"referrer_code is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.referrer_code).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is within acceptable range\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									"",
									"pm.test(\"The referrer_code is in the correct format\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.referrer_code).to.match(/^[a-zA-Z0-9]+$/, \"The referrer_code should only contain alphanumeric characters\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-CSRFToken",
								"value": "{{csrf_token}}",
								"type": "text"
							},
							{
								"key": "Referer",
								"value": "https://iliasamodin.pythonanywhere.com/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"referrer_code\": \"000003\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/profile/referrer/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"profile",
								"referrer",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-CSRFToken",
										"value": "IcBh7F1IrDFeMyKIu1xGNLyHMGDQwvT952ffMVo6J0JmSXAMoOOrcpbfZLMArULw",
										"type": "text"
									},
									{
										"key": "Referer",
										"value": "https://iliasamodin.pythonanywhere.com/",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"referrer_code\": \"000003\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/profile/referrer/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"profile",
										"referrer",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 16:49:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "26"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-Clacks-Overhead",
									"value": "GNU Terry Pratchett"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "{\n    \"referrer_code\": \"000003\"\n}"
						}
					]
				},
				{
					"name": "Retrying to set referrer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has required fields - referrer_code and message\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.referrer_code).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.message).to.exist.and.to.be.a('string');",
									"});",
									"",
									"",
									"pm.test(\"referrer_code is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.referrer_code).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Message is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"",
									"  pm.expect(responseData.message).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-CSRFToken",
								"value": "{{csrf_token}}",
								"type": "text"
							},
							{
								"key": "Referer",
								"value": "https://iliasamodin.pythonanywhere.com/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"referrer_code\": \"000001\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/profile/referrer/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"profile",
								"referrer",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-CSRFToken",
										"value": "IcBh7F1IrDFeMyKIu1xGNLyHMGDQwvT952ffMVo6J0JmSXAMoOOrcpbfZLMArULw",
										"type": "text"
									},
									{
										"key": "Referer",
										"value": "https://iliasamodin.pythonanywhere.com/",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"referrer_code\": \"000001\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/profile/referrer/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"profile",
										"referrer",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 16:54:10 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "88"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-Clacks-Overhead",
									"value": "GNU Terry Pratchett"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "{\n    \"referrer_code\": \"000003\",\n    \"message\": \"Referrer previously defined and cannot be changed\"\n}"
						}
					]
				},
				{
					"name": "Referrer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required field - referrer_code\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.referrer_code).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"referrer_code is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.referrer_code).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"",
									"pm.test(\"The referrer_code is alphanumeric\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.referrer_code).to.match(/^[a-zA-Z0-9]+$/, \"The referrer_code should be alphanumeric\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/profile/referrer/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"profile",
								"referrer",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/profile/referrer/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"profile",
										"referrer",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 16:55:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "26"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-Clacks-Overhead",
									"value": "GNU Terry Pratchett"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "{\n    \"referrer_code\": \"000003\"\n}"
						}
					]
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required field - message\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.message).to.exist.and.to.be.a('string');",
									"});",
									"",
									"",
									"pm.test(\"Message is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"",
									"pm.test(\"Verify that response does not contain any additional fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(Object.keys(responseData)).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/logout/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"logout",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/logout/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"logout",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 16:56:10 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "32"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Set-Cookie",
									"value": "sessionid=\"\"; expires=Thu, 01 Jan 1970 00:00:00 GMT; Max-Age=0; Path=/; SameSite=Lax"
								},
								{
									"key": "X-Clacks-Overhead",
									"value": "GNU Terry Pratchett"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"You are logged out\"\n}"
						}
					]
				}
			],
			"description": "Registration and authorization of a user, conditionally called the \"second user\", receiving an empty list of his referrals (the list is empty, since the user has just registered and has not yet brought anyone into the system), receiving an invite code of an authorized user and adding the referrer \"first user\"."
		},
		{
			"name": "First user (checking new referral)",
			"item": [
				{
					"name": "Login - phone validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonObject = JSON.parse(responseBody);",
									"pm.environment.set(\"authorization_code\", jsonObject.code);",
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has required fields - message and code\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.message).to.exist.and.to.be.a('string');",
									"  pm.expect(responseData.code).to.exist.and.to.be.a('string');",
									"});",
									"",
									"",
									"pm.test(\"Message is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Code is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.code).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"phone_number\": 79991110000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/login/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"login",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"phone_number\": 79991110000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/login/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"login",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 17:03:52 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "88"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-Clacks-Overhead",
									"value": "GNU Terry Pratchett"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Pass code from SMS by 'authorization_code' key\",\n    \"authorization_code\": \"1125\"\n}"
						}
					]
				},
				{
					"name": "Login - authorization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has required fields\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.phone_number).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.invite_code).to.exist.and.to.be.a('string');",
									"    pm.expect(responseData.is_superuser).to.exist.and.to.be.a('boolean');",
									"    pm.expect(responseData.is_staff).to.exist.and.to.be.a('boolean');",
									"});",
									"",
									"",
									"pm.test(\"Phone number is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.phone_number).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Phone number should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"invite_code is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.invite_code).to.be.a('string').and.to.have.lengthOf.at.least(1, \"invite_code should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"is_superuser is a boolean value\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.is_superuser).to.be.a('boolean');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"authorization_code\": {{authorization_code}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/login/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"login",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"authorization_code\": 1125\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/login/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"login",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 17:05:34 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "91"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, POST, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Set-Cookie",
									"value": "csrftoken=fXjJZHWgvRx6cmSCpMv09C9lcvS6zXEaubyW5e1KuR5KDhTp3JEFnmbWtn2W0OFB; expires=Tue, 03 Sep 2024 17:05:34 GMT; Max-Age=31449600; Path=/; SameSite=Lax"
								},
								{
									"key": "Set-Cookie",
									"value": "sessionid=wsmnlfl45q8y0ra67x92aclecygck1lw; expires=Tue, 19 Sep 2023 17:05:34 GMT; HttpOnly; Max-Age=1209600; Path=/; SameSite=Lax"
								},
								{
									"key": "X-Clacks-Overhead",
									"value": "GNU Terry Pratchett"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "{\n    \"phone_number\": \"79991110000\",\n    \"invite_code\": \"000003\",\n    \"is_superuser\": false,\n    \"is_staff\": false\n}"
						}
					]
				},
				{
					"name": "Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response is an array with at least one element\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('array').and.to.have.lengthOf.at.least(1);",
									"});",
									"",
									"",
									"pm.test(\"phone_number is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    pm.expect(responseData).to.have.lengthOf.at.least(1, \"Array should not be empty\");",
									"    ",
									"    responseData.forEach(function (item) {",
									"        pm.expect(item.phone_number).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Phone number is in a valid format\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function (item) {",
									"        pm.expect(item.phone_number).to.match(/^\\(\\d{3}\\) \\d{3}-\\d{4}$/);",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/profile/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"profile",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/profile/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"profile",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 17:06:48 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "94"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-Clacks-Overhead",
									"value": "GNU Terry Pratchett"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"phone_number\": \"78976528908\"\n    },\n    {\n        \"phone_number\": \"77145059227\"\n    },\n    {\n        \"phone_number\": \"79764923834\"\n    }\n]"
						}
					]
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required field - message\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.message).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Message is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.message).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"",
									"pm.test(\"Verify that the message is equal to 'Logout successful'\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.message).to.equal('Logout successful');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://iliasamodin.pythonanywhere.com/api/v1/logout/",
							"protocol": "https",
							"host": [
								"iliasamodin",
								"pythonanywhere",
								"com"
							],
							"path": [
								"api",
								"v1",
								"logout",
								""
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://iliasamodin.pythonanywhere.com/api/v1/logout/",
									"protocol": "https",
									"host": [
										"iliasamodin",
										"pythonanywhere",
										"com"
									],
									"path": [
										"api",
										"v1",
										"logout",
										""
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 05 Sep 2023 17:13:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "58"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept, Cookie"
								},
								{
									"key": "Allow",
									"value": "GET, HEAD, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "strict-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Server",
									"value": "PythonAnywhere"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": \"Authentication credentials were not provided.\"\n}"
						}
					]
				}
			],
			"description": "Authorization in the account of the user, conditionally called the \"first user\", receiving his referrals, among which is now the \"second user\"."
		}
	]
}